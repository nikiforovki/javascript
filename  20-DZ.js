/*
1. Напиши функцию, которая принимает массив чисел, совершает над ними любую
математическую операцию и возвращает новый массив, содержащий результаты
этих операций, используя стрелочные функции;
*/

const numbers = [1, 2, 3];

const newNumbers = numbers.map(num => num + 2);

console.log(newNumbers);



/*2. Создай объект с методом, который использует стрелочную функцию внутри
метода `setTimeout` для вывода значения свойства объекта через 1 секунду;*/

const obj = {
    name: 'Kirill',
    greet: function () {
        setTimeout(() => {
            console.log(this.name);
        }, 1000);
    }
}

obj.greet()




/*
3. Реализуй функцию высшего порядка*, которая принимает функцию и
массив,и применяет эту функцию ко всем элементам массива, используя
стрелочные функции.*/
const applyToAll = (func, arr) => arr.map(func);
const square = x => x * x;
const nums = [2, 4, 6];

console.log(applyToAll(square, nums));










































/*
1. Напиши функцию, которая принимает массив чисел, совершает над ними любую
математическую операцию и возвращает новый массив, содержащий результаты
этих операций, используя стрелочные функции;




/*2. Создай объект с методом, который использует стрелочную функцию внутри
метода `setTimeout` для вывода значения свойства объекта через 1 секунду;*/




/*
3. Реализуй функцию высшего порядка*, которая принимает функцию и
массив,и применяет эту функцию ко всем элементам массива, используя
стрелочные функции.*/
